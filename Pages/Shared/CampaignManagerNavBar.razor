@using ZaraBlazorStandlone.Models.Enum
<div class="navbar-shared">
    <div class="nav-left">
        <div class="group-175409">
            <div class="deta-ils @(selectedTab == TabType.Details ? "active-tab" : "")"
                 @onclick="() => SelectTab(TabType.Details)">
                <span><span class="deta-ils-span2">Details</span></span>
            </div>
            <div class="allocation @(selectedTab == TabType.Allocation ? "active-tab" : "")"
                 @onclick="() => SelectTab(TabType.Allocation)">
                Allocation
            </div>
            <div class="elements @(selectedTab == TabType.Elements ? "active-tab" : "")"
                 @onclick="() => SelectTab(TabType.Elements)">
                Elements
            </div>
            <div class="stores @(selectedTab == TabType.Stores ? "active-tab" : "")"
                 @onclick="() => SelectTab(TabType.Stores)">
                Stores
            </div>
            <div class="files @(selectedTab == TabType.Files ? "active-tab" : "")"
                 @onclick="() => SelectTab(TabType.Files)">
                Files
            </div>
            <div class="prices @(selectedTab == TabType.Prices ? "active-tab" : "")"
                 @onclick="() => SelectTab(TabType.Prices)">
                Price
            </div>
        </div>
    </div>

    <div class="nav-right">
        <div class="group-175410">
            <button class="shared-button">
                <img class="icon-akar-download" src="/images/icons/icon akar-download.png" alt="Download" />
                Export campaign list
            </button>
        </div>
        <div class="group-175411">
            <button class="shared-button">
                <img class="icon-material-add" src="/images/icons/Icon material-add.png" alt="Add" />
                Add campaign list
            </button>
        </div>
    </div>
</div>
@code {
    [Parameter]
    public EventCallback<TabType> OnTabSelected { get; set; }

    private void SelectTab(TabType tab)
    {
        OnTabSelected.InvokeAsync(tab);
    }
    [Parameter]
    public TabType selectedTab { get; set; }
    

    public TabType activeTab = TabType.Details;

    
}